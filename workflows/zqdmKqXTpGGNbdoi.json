{
  "createdAt": "2025-06-24T04:02:11.832Z",
  "updatedAt": "2025-07-01T08:55:25.536Z",
  "id": "zqdmKqXTpGGNbdoi",
  "name": "AI Search By One KB",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "model": "nomic-embed-text:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        -60,
        480
      ],
      "id": "85f73e80-8764-4a70-9204-0014bfd873d1",
      "name": "Embeddings Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "Up6uCxyZ2GVh8ax8",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=In the knowledge base, find me answers for the below question:\n{{ $('Input').item.json.input }}",
        "options": {
          "systemMessage": "You are a personal assistant who helps answer questions from a corpus of documents. The documents are either text based (Txt, docs, extracted PDFs, etc.) or tabular data (CSVs or Excel documents).\n\nYou are given tools to perform RAG in the 'documents' table, look up the documents available in your knowledge base in the 'document_metadata' table, extract all the text from a given document, and query the tabular files with SQL in the 'document_rows' table.\n\nAlways start by performing RAG unless the users asks you to check a document or the question requires a SQL query for tabular data (fetching a sum, finding a max, something a RAG lookup would be unreliable for). If RAG doesn't help, then look at the documents that are available to you, find a few that you think would contain the answer, and then analyze those.\n\nAlways tell the user if you didn't find the answer. Don't make something up just to please them."
        }
      },
      "id": "e4503d1e-f9dc-4cf3-8642-9139a799b58b",
      "name": "Knowledge Base Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -140,
        40
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "=kb_{{ $('Input').item.json.table_name }}",
          "mode": "id"
        },
        "options": {
          "queryName": "=match_kb_{{ $('Input').item.json.table_name }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.2,
      "position": [
        -60,
        360
      ],
      "id": "bd80304a-6a06-4fcc-8e1c-ff0f53d60fe9",
      "name": "Supabase Vector Store documents",
      "retryOnFail": true,
      "credentials": {
        "supabaseApi": {
          "id": "7kKQPQnrYNYdRgyX",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "description": "Retrieve information about the projects.",
        "topK": 50
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1.1,
      "position": [
        -60,
        240
      ],
      "id": "de402c93-4756-442f-af51-bfe6441af32c",
      "name": "Answer questions with a vector store documents"
    },
    {
      "parameters": {
        "model": "qwen2.5:7b-instruct-q4_K_M",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -260,
        480
      ],
      "id": "8f233c18-17c2-4210-b3d8-5332549dfdcb",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "Up6uCxyZ2GVh8ax8",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "result = {}\nfor item in _input.all():\n  for key, value in item.json.items():\n    result[\"json\"] = {f\"output from {_('Input').item.json.table_name} knowledge base\": value}\nreturn result"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        40
      ],
      "id": "10021fe1-7aa5-438c-b0d7-f685d7a52933",
      "name": "Code"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "input"
            },
            {
              "name": "table_name"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -360,
        40
      ],
      "id": "2059c571-1d64-4649-8308-e612aaf82a2f",
      "name": "Input"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "o05TAQ6plQRkggBq",
          "mode": "list",
          "cachedResultName": "Call Vector Database"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "table_name": "=kb_{{ $('Input').item.json.table_name }}",
            "input": "=match_kb_{{ $('Input').item.json.table_name }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "table_name",
              "displayName": "table_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "input",
              "displayName": "input",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        640,
        380
      ],
      "id": "4660fd4e-6477-498c-8017-879f266775c0",
      "name": "Call n8n Workflow Tool"
    }
  ],
  "connections": {
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store documents",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store documents": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store documents",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store documents": {
      "ai_tool": [
        [
          {
            "node": "Knowledge Base Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Knowledge Base Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Answer questions with a vector store documents",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Knowledge Base Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input": {
      "main": [
        [
          {
            "node": "Knowledge Base Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call n8n Workflow Tool": {
      "ai_tool": [
        []
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "Input": [
      {
        "json": {
          "input": "给我知识库中的remove_website实现代码和百度相关知识",
          "table_name": "code"
        }
      }
    ],
    "Knowledge Base Agent": [
      {
        "json": {
          "output": "根据您请求的内容，“remove_website” 实现代码如下：\n\n```python\ndef remove_website(self):\n    to_removes = [\n        'blog.tag.category',\n        'blog.tag',\n        'blog.post',\n        'blog.blog',\n        'product.wishlist',\n        'website.published.multi.mixin',\n        'website.published.mixin',\n        'website.multi.mixin',\n        'website.visitor',\n        'website.redirect',\n        'website.seo.metadata',\n    ]\n    seqs = []\n    return self.remove_data(to_removes, seqs)\n```\n\n这段代码定义了 `remove_website` 方法，它会移除一系列与网站和博客相关的记录。这些记录包括但不限于博客标签类别、博客标签、博客文章以及产品愿望清单等。\n\n关于百度相关知识部分，由于您没有提供具体问题或信息点，我将简要回答一些一般性的问题：\n\n- **百度** 是中国最大的搜索引擎之一。\n- 它提供网页搜索、新闻搜索、图片搜索等多种服务。\n- 百度也开发了一些AI技术和服务，例如自然语言处理、语音识别等。\n- 在商业化方面，百度还提供了各种广告服务和技术支持。\n\n如果您有更具体的问题或需要详细了解某个方面的信息，请告诉我。"
        }
      }
    ]
  },
  "versionId": "4277221b-f5a6-487f-9dd8-c360615b4979",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-06-24T05:57:29.533Z",
      "updatedAt": "2025-06-24T05:57:29.533Z",
      "id": "0TQNWPOpix39gaQQ",
      "name": "Tool"
    }
  ]
}